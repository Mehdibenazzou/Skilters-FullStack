{"ast":null,"code":"import _objectSpread from \"/Users/Mehdi/eclipse-workspace/Skilters_React/app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../Actions/types\";\nvar initialState = {\n  project_tasks: [],\n  project_task: {}\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_BACKLOG:\n      return _objectSpread({}, state, {\n        project_tasks: action.payload\n      });\n\n    case GET_PROJECT_TASK:\n      return _objectSpread({}, state, {\n        project_task: action.payload\n      });\n\n    case DELETE_PROJECT_TASK:\n      return _objectSpread({}, state, {\n        project_tasks: state.project_tasks.filter(function (project_task) {\n          return project_task.projectSequence !== action.payload;\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/Mehdi/eclipse-workspace/Skilters_React/app/src/reducers/backlogReducer.js"],"names":["GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","initialState","project_tasks","project_task","state","action","type","payload","filter","projectSequence"],"mappings":";AAAA,SACIA,WADJ,EAEIC,gBAFJ,EAGIC,mBAHJ,QAIS,kBAJT;AAME,IAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,EADI;AAEnBC,EAAAA,YAAY,EAAE;AAFK,CAArB;AAKA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAL;AACE,+BACKM,KADL;AAEEF,QAAAA,aAAa,EAAEG,MAAM,CAACE;AAFxB;;AAKF,SAAKR,gBAAL;AACE,+BACKK,KADL;AAEED,QAAAA,YAAY,EAAEE,MAAM,CAACE;AAFvB;;AAKF,SAAKP,mBAAL;AACE,+BACKI,KADL;AAEEF,QAAAA,aAAa,EAAEE,KAAK,CAACF,aAAN,CAAoBM,MAApB,CACb,UAAAL,YAAY;AAAA,iBAAIA,YAAY,CAACM,eAAb,KAAiCJ,MAAM,CAACE,OAA5C;AAAA,SADC;AAFjB;;AAOF;AACE,aAAOH,KAAP;AAtBJ;AAwBD","sourcesContent":["import {\n    GET_BACKLOG,\n    GET_PROJECT_TASK,\n    DELETE_PROJECT_TASK\n  } from \"../Actions/types\";\n  \n  const initialState = {\n    project_tasks: [],\n    project_task: {}\n  };\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case GET_BACKLOG:\n        return {\n          ...state,\n          project_tasks: action.payload\n        };\n  \n      case GET_PROJECT_TASK:\n        return {\n          ...state,\n          project_task: action.payload\n        };\n  \n      case DELETE_PROJECT_TASK:\n        return {\n          ...state,\n          project_tasks: state.project_tasks.filter(\n            project_task => project_task.projectSequence !== action.payload\n          )\n        };\n  \n      default:\n        return state;\n    }\n  }"]},"metadata":{},"sourceType":"module"}