{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Mehdi/eclipse-workspace/Skilters_React/app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Mehdi/eclipse-workspace/Skilters_React/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { GET_ERRORS } from \"./types\";\nimport setJWTToken from '../securityUtils/setJWTToken';\nimport jwt_decode from \"jwt-decode\";\nexport var createNewUser = function createNewUser(newUser, history) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.post(\"users/register\", newUser);\n\n              case 3:\n                history.push(\"/\");\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: {}\n                });\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: _context.t0.response.data\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var login = function login(LoginRequest) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var res, token, decoded;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.post(\"/users/login\", LoginRequest);\n\n              case 3:\n                res = _context2.sent;\n                // extract token from res.data\n                token = res.data.token; // store the token in the localStorage\n\n                localStorage.setItem(\"jwtToken\", token); // set our token in header ***\n\n                setJWTToken(token); // decode token on React\n\n                decoded = jwt_decode(token); // dispatch to our securityReducer\n\n                dispatch({\n                  type: SET_CURRENT_USER,\n                  payload: decoded\n                });\n                _context2.next = 14;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: _context2.t0.response.data\n                });\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 11]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/Mehdi/eclipse-workspace/Skilters_React/app/src/Actions/securityActions.js"],"names":["axios","GET_ERRORS","setJWTToken","jwt_decode","createNewUser","newUser","history","dispatch","post","push","type","payload","response","data","login","LoginRequest","res","token","localStorage","setItem","decoded","SET_CURRENT_USER"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,SAAzB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAUC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAsB,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAErCP,KAAK,CAACQ,IAAN,CAAW,gBAAX,EAA6BH,OAA7B,CAFqC;;AAAA;AAG3CC,gBAAAA,OAAO,CAACG,IAAR,CAAa,GAAb;AACAF,gBAAAA,QAAQ,CAAC;AACLG,kBAAAA,IAAI,EAAET,UADD;AAELU,kBAAAA,OAAO,EAAE;AAFJ,iBAAD,CAAR;AAJ2C;AAAA;;AAAA;AAAA;AAAA;AAS3CJ,gBAAAA,QAAQ,CAAE;AACNG,kBAAAA,IAAI,EAAET,UADA;AAENU,kBAAAA,OAAO,EAAE,YAAMC,QAAN,CAAeC;AAFlB,iBAAF,CAAR;;AAT2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAtB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAgBP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,kBAAMR,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGbP,KAAK,CAACQ,IAAN,CAAW,cAAX,EAA2BO,YAA3B,CAHa;;AAAA;AAGzBC,gBAAAA,GAHyB;AAI/B;AACQC,gBAAAA,KALuB,GAKbD,GAAG,CAACH,IALS,CAKvBI,KALuB,EAM/B;;AACAC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EAP+B,CAQ/B;;AACAf,gBAAAA,WAAW,CAACe,KAAD,CAAX,CAT+B,CAU/B;;AACMG,gBAAAA,OAXyB,GAWfjB,UAAU,CAACc,KAAD,CAXK,EAY/B;;AACAV,gBAAAA,QAAQ,CAAC;AACPG,kBAAAA,IAAI,EAAEW,gBADC;AAEPV,kBAAAA,OAAO,EAAES;AAFF,iBAAD,CAAR;AAb+B;AAAA;;AAAA;AAAA;AAAA;AAkB/Bb,gBAAAA,QAAQ,CAAC;AACPG,kBAAAA,IAAI,EAAET,UADC;AAEPU,kBAAAA,OAAO,EAAE,aAAIC,QAAJ,CAAaC;AAFf,iBAAD,CAAR;;AAlB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B","sourcesContent":["import axios from \"axios\"\nimport {GET_ERRORS} from \"./types\"\nimport setJWTToken from '../securityUtils/setJWTToken'\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n    try {\n        await axios.post(\"users/register\", newUser);\n        history.push(\"/\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        })\n    } catch(error) {\n        dispatch ({\n            type: GET_ERRORS,\n            payload: error.response.data\n        });\n    }\n}\n\nexport const login = LoginRequest => async dispatch => {\n    try {\n      // post => Login Request\n      const res = await axios.post(\"/users/login\", LoginRequest);\n      // extract token from res.data\n      const { token } = res.data;\n      // store the token in the localStorage\n      localStorage.setItem(\"jwtToken\", token);\n      // set our token in header ***\n      setJWTToken(token);\n      // decode token on React\n      const decoded = jwt_decode(token);\n      // dispatch to our securityReducer\n      dispatch({\n        type: SET_CURRENT_USER,\n        payload: decoded\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    }\n  };"]},"metadata":{},"sourceType":"module"}